summarise(avgConduc = mean(`Cond µS/cm`))%>%
mutate(month = factor(month,
levels = c("January", "February", "March",
"April", "May", "June", "July", "August", "September", "October",
"November", "December")))%>%
arrange(year)%>%
na.omit()
ggplot(data = sond_cond, aes(x = month, y = avgConduc, fill = year ))+
geom_col()+
theme(axis.text = element_text(angle = 90))
ggplot(data = sond_cond, aes(x = month, y = avgConduc, fill = year ))+
geom_col()+
theme(axis.text = element_text(angle = 90))
ggplot(data = sond_cond, aes(x = month, y = avgConduc ))+
geom_col()+
theme(axis.text = element_text(angle = 90))
#### avg conductance
sond_cond <- sond %>%
group_by(month, year) %>%
summarise(avgConduc = mean(`Cond µS/cm`))%>%
mutate(month = factor(month,
levels = c("January", "February", "March",
"April", "May", "June", "July", "August", "September", "October",
"November", "December")))%>%
arrange(year)%>%
na.omit()
ggplot(data = sond_cond, aes(x = month, y = avgConduc))+
geom_col()+
theme(axis.text = element_text(angle = 90))
#### avg conductance
sond_cond <- sond %>%
group_by(month, year) %>%
summarise(avgConduc = mean(`Cond µS/cm`))%>%
mutate(month = factor(month,
levels = c("January", "February", "March",
"April", "May", "June", "July", "August", "September", "October",
"November", "December")))%>%
na.omit()
ggplot(data = sond_cond, aes(x = month, y = avgConduc, fill = year))+
geom_col()+
theme(axis.text = element_text(angle = 90))
ggplot(data = sond_cond, aes(x = month, y = avgConduc, fill = year), position_dodge())+
geom_col()+
theme(axis.text = element_text(angle = 90))
ggplot(data = sond_cond, aes(x = month, y = avgConduc, fill = year))+
geom_col()+
theme(axis.text = element_text(angle = 90))
ggplot(data = sond_cond, aes(x = month, y = avgConduc, fill = year))+
geom_col()+
theme(axis.text = element_text(angle = 90))+
theme(legend.text = "YEAR")
ggplot(data = sond_cond, aes(x = month, y = avgConduc, fill = year))+
geom_col()+
theme(axis.text = element_text(angle = 90))+
theme(legend.text = c("2020", "2021"))
ggplot(data = sond_cond, aes(x = month, y = avgConduc, fill = year))+
geom_col()+
theme(axis.text = element_text(angle = 90))
ggplot(data = sond_cond, aes(x = month, y = avgConduc, sort(year)))+
geom_col()+
theme(axis.text = element_text(angle = 90))
ggplot(data = sond_cond, aes(x = month, y = avgConduc, separate(year)))+
geom_col()+
theme(axis.text = element_text(angle = 90))
ggplot(data = sond_cond, aes(x = month, y = avgConduc, separate(year)))+
geom_col()+
theme(axis.text = element_text(angle = 90))
ggplot(data = sond_cond, aes(x = month, y = avgConduc, fill = year))+
geom_col()+
theme(axis.text = element_text(angle = 90))
#Ammonia levels grouped by year & month
avg_nh3 <- sond %>%
group_by(month) %>%
filter(year == 2021)%>%
summarise(total = mean(`NH3 mg/L`, na.rm = TRUE)) %>%
mutate(month = factor(month,
levels = c("January", "February", "March",
"April", "May", "June", "July", "August", "September", "October",
"November", "December")))+
na.omit('NA')
ggplot(data = avg_nh3, aes(x = month, y = total)) +
geom_point()+
geom_line()+
coord_flip()
#Ammonia levels grouped by year & month
avg_nh3 <- sond %>%
group_by(month) %>%
filter(year == 2021)%>%
summarise(total = mean(`NH3 mg/L`, na.rm = TRUE)) %>%
mutate(month = factor(month,
levels = c("January", "February", "March",
"April", "May", "June", "July", "August", "September", "October",
"November", "December")))+
na.omit('NA')
#Ammonia levels grouped by year & month
avg_nh3 <- sond %>%
group_by(month) %>%
filter(year == 2021)%>%
summarise(total = mean(`NH3 mg/L`, na.rm = TRUE)) %>%
mutate(month = factor(month,
levels = c("January", "February", "March",
"April", "May", "June", "July", "August", "September", "October",
"November", "December")))%>%
na.omit('NA')
ggplot(data = avg_nh3, aes(x = month, y = total)) +
geom_point()+
geom_line()+
coord_flip()
ggplot(data = avg_nh3, aes(x = month, y = total)) +
geom_point()+
geom_line()
#Ammonia levels grouped by year & month
avg_nh3 <- sond %>%
group_by(month) %>%
filter(year == 2021)%>%
summarise(total = mean(`NH3 mg/L`, na.rm = TRUE)) %>%
mutate(month = factor(month,
levels = c("January", "February", "March",
"April", "May", "June", "July", "August", "September", "October",
"November", "December")))%>%
na.omit('NA')
ggplot(data = avg_nh3, aes(x = month, y = total)) +
geom_point()+
geom_line()
ggplot(data = avg_nh3, aes(x = month, y = total)) +
geom_col()
ggplot(data = avg_nh3, aes(x = month, y = total)) +
geom_col()+
theme(axis.text = element_text(angle = 90))
#### avg conductance
sond_cond <- sond %>%
group_by(month, year) %>%
summarise(avgConduc = mean(`Cond µS/cm`))%>%
mutate(month = factor(month,
levels = c("January", "February", "March",
"April", "May", "June", "July", "August", "September", "October",
"November", "December")))%>%
na.omit()
ggplot(data = sond_cond, aes(x = month, y = avgConduc, fill = year))+
geom_col()+
theme(axis.text = element_text(angle = 90))
ggplot(data = avg_nh3, aes(x = month, y = total, fill = year)) +
geom_col()+
theme(axis.text = element_text(angle = 90))
#Ammonia levels grouped by year & month
avg_nh3 <- sond %>%
group_by(month) %>%
filter(year == 2021)%>%
summarise(total = mean(`NH3 mg/L`, na.rm = TRUE)) %>%
mutate(month = factor(month,
levels = c("January", "February", "March",
"April", "May", "June", "July", "August", "September", "October",
"November", "December")))%>%
na.omit('NA')
ggplot(data = avg_nh3, aes(x = month, y = total, fill = year)) +
geom_col()+
theme(axis.text = element_text(angle = 90))
ggplot(data = avg_nh3, aes(x = month, y = total)) +
geom_col()+
theme(axis.text = element_text(angle = 90))
ggplot(data = avg_nh3, aes(x = month, y = total)) +
geom_col(fill = year)+
theme(axis.text = element_text(angle = 90))
#Ammonia levels grouped by year & month
avg_nh3 <- sond %>%
group_by(month) %>%
summarise(total = mean(`NH3 mg/L`, na.rm = TRUE)) %>%
mutate(month = factor(month,
levels = c("January", "February", "March",
"April", "May", "June", "July", "August", "September", "October",
"November", "December")))%>%
na.omit('NA')
ggplot(data = avg_nh3, aes(x = month, y = total)) +
geom_col(fill = year)+
theme(axis.text = element_text(angle = 90))
ggplot(data = avg_nh3, aes(x = month, y = total, fill = year)) +
geom_col()+
theme(axis.text = element_text(angle = 90))
View(avg_nh3)
#Ammonia levels grouped by year & month
avg_nh3 <- sond %>%
group_by(month) %>%
summarise(total = mean(`NH3 mg/L`, na.rm = TRUE)) %>%
mutate(month = factor(month,
levels = c("January", "February", "March",
"April", "May", "June", "July", "August", "September", "October",
"November", "December")))%>%
na.omit('NA')
#Ammonia levels grouped by year & month
avg_nh3 <- sond %>%
group_by(month, year) %>%
summarise(total = mean(`NH3 mg/L`, na.rm = TRUE)) %>%
mutate(month = factor(month,
levels = c("January", "February", "March",
"April", "May", "June", "July", "August", "September", "October",
"November", "December")))%>%
na.omit('NA')
ggplot(data = avg_nh3, aes(x = month, y = total, fill = year)) +
geom_col()+
theme(axis.text = element_text(angle = 90))
ggplot(data = avg_nh3, aes(x = month, y = total, fill = year), as.numeric()) +
geom_col()+
theme(axis.text = element_text(angle = 90))
ggplot(data = avg_nh3, aes(x = month, y = total, fill = year)) +
geom_col()+
theme(axis.text = element_text(angle = 90))
ggplot(data = avg_nh3, aes(x = month, y = total, fill = year)as.numeric = TRUE) +
geom_col()+
theme(axis.text = element_text(angle = 90))
ggplot(data = avg_nh3, aes(x = month, y = total, fill = year)) +
geom_col()+
theme(axis.text = element_text(angle = 90), axis.ticks.length.y = .02)
ggplot(data = avg_nh3, aes(x = month, y = total, fill = year)) +
geom_col()+
theme(axis.text = element_text(angle = 90))
ggplot(data = avg_nh3, aes(x = month, y = total, fill = year)) +
geom_col()+
theme(axis.text = element_text(angle = 90), legend.position = "bottom")
ggplot(data = avg_nh3, aes(x = month, y = total, fill = year)) +
geom_col()+
theme(axis.text = element_text(angle = 90), legend.position = "top")
ggplot(data = avg_nh3, aes(x = month, y = total, fill = year)) +
geom_col()+
theme(axis.text = element_text(angle = 90), legend.position = "right")
ggplot(data = avg_nh3, aes(x = month, y = total, fill = year)) +
geom_col()+
theme(axis.text = element_text(angle = 90), legend.position = "left")
ggplot(data = avg_nh3, aes(x = month, y = total, fill = year)) +
geom_col()+
theme(axis.text = element_text(angle = 90))
runApp('First wetlands shiny.R')
ui <- dashboardPage(
dashboardHeader(title = "Sewanee Wetlands"),
## Sidebar content
dashboardSidebar(
sidebarMenu(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")),
menuItem("Widgets", tabName = "widgets", icon = icon("th"))
)
),
## Body content
dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "dashboard",
fluidRow(
box(plotOutput("plot1", height = 250)),
box(
title = "Controls",
selectInput("month", "Select Month")
)
)
),
# Second tab content
tabItem(tabName = "widgets",
h2("Widgets tab content")
)
)
),
# Boxes need to be put in a row (or column)
fluidRow(
box(plotOutput("plot1", height = 250)),
box(
title = "Controls",
selectInput("slider", "Select Month", list("January", 'Feb', 'March'))
)
)
)
runApp('First wetlands shiny.R')
ui <- dashboardPage(
dashboardHeader(title = "Sewanee Wetlands"),
## Sidebar content
dashboardSidebar(
sidebarMenu(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard")),
menuItem("Widgets", tabName = "widgets", icon = icon("th"))
)
),
## Body content
dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "dashboard",
fluidRow(
box(plotOutput("plot1", height = 250)),
box(
title = "Controls",
selectInput("sond$Date", "Select Month")
)
)
),
# Second tab content
tabItem(tabName = "widgets",
h2("Widgets tab content")
)
)
),
# Boxes need to be put in a row (or column)
fluidRow(
box(plotOutput("plot1", height = 250)),
box(
title = "Controls",
selectInput("slider", "Select Month", list("January", 'Feb', 'March'))
)
)
)
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
library(shinydashboard)
library(shiny)
runApp('First wetlands shiny.R')
ui <- dashboardPage(
dashboardHeader(title = "Sewanee Wetlands"),
## Sidebar content
dashboardSidebar(
sidebarMenu(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard"))
)
),
## Body content
dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "dashboard",
fluidRow(
box(plotOutput("plot1", height = 250)),
box(
title = "Controls",
selectInput("sond$Date", "Select Month")
)
)
),
# Second tab content
tabItem(tabName = "widgets",
h2("Widgets tab content")
)
)
),
# Boxes need to be put in a row (or column)
fluidRow(
box(plotOutput("plot1", height = 250)),
box(
title = "Controls",
selectInput("slider", "Select Month", list("January", 'Feb', 'March'))
)
)
)
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
ui <- dashboardPage(
dashboardHeader(title = "Sewanee Wetlands"),
## Sidebar content
dashboardSidebar(
sidebarMenu(
menuItem("Dashboard", tabName = "dashboard", icon = icon("dashboard"), verify_fa = FALSE)
)
),
## Body content
dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "dashboard",
fluidRow(
box(plotOutput("plot1", height = 250)),
box(
title = "Controls",
selectInput("sond$Date", "Select Month")
)
)
),
# Second tab content
tabItem(tabName = "widgets",
h2("Widgets tab content")
)
)
),
# Boxes need to be put in a row (or column)
fluidRow(
box(plotOutput("plot1", height = 250)),
box(
title = "Controls",
selectInput("slider", "Select Month", list("January", 'Feb', 'March'))
)
)
)
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
###
ui <- dashboardPage(
dashboardHeader(title = "Sewanee Wetlands"),
## Sidebar content
dashboardSidebar(
sidebarMenu(
menuItem("Dashboard", tabName = "dashboard", icon = icon("th"))
)
),
## Body content
dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "dashboard",
fluidRow(
box(plotOutput("sond_cond")),
box(
title = "Select:",
collapsible = TRUE,
solidHeader = TRUE,
selectInput("month", "Month",
choices = c("January", "February", "March",
"April", "May", "June", "July", "August", "September", "October",
"November", "December")),
selectInput("year", "Year" ,
choices = c("2020", "2021"))
)
)
)) )
)
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
###
ui <- dashboardPage(
dashboardHeader(title = "Sewanee Wetlands"),
## Sidebar content
dashboardSidebar(
sidebarMenu(
menuItem("Dashboard", tabName = "dashboard", icon = icon("th"))
)
),
## Body content
dashboardBody(
tabItems(
# First tab content
tabItem(tabName = "dashboard",
fluidRow(
box(plotOutput("sond_cond")),
box(
title = "Select:",
collapsible = TRUE,
status = "primary",
solidHeader = TRUE,
selectInput("month", "Month",
choices = c("January", "February", "March",
"April", "May", "June", "July", "August", "September", "October",
"November", "December")),
selectInput("year", "Year" ,
choices = c("2020", "2021"))
)
)
)) )
)
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
cond_plot<-ggplot(data = sond_cond, aes(x = month, y = avgConduc, fill = year))+
geom_col()+
theme(axis.text = element_text(angle = 90))
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
View(cond_plot)
cond_plot <-ggplot(data = sond_cond, aes(x = month, y = avgConduc, fill = year))+
geom_col()+
theme(axis.text = element_text(angle = 90))
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
rv$sond
url<-"https://docs.google.com/spreadsheets/d/14nn7NWMBatbzcz9nqcTFzQghmzMUE2o0/edit?usp=sharing&ouid=104854259661631892531&rtpof=true&sd=true"
runApp('First wetlands shiny.R')
runApp('First wetlands shiny.R')
