breaks = seq_along(month.name),
labels = month.name)+
theme(axis.text.x = element_text(angle = 90))+
ylim(0,.8)+
labs(title = "Solar Total Average per Month (2021)",
subtitle = 'At Sewanee Utility District',
y = 'Solar Total (MJ/m2)',
x = 'Months')
ggplot(data = solar_avg, aes(x = mm, y = solar_avg)) +
geom_col(fill = 'yellow3')+
scale_x_continuous(
breaks = seq_along(month.name),
labels = month.name)+
theme(axis.text.x = element_text(angle = 90))+
labs(title = "Solar Total Average per Month (2021)",
subtitle = 'At Sewanee Utility District',
y = 'Solar Total (MJ/m2)',
x = 'Months')
View(sud2)
View(sond)
View(all_data)
library(data.table)
dt <- data.table(all_data)
View(dt)
dt[,delta := c(0, diff(value)), by = '`Site Name`'][]
dt[,delta := c(1, diff(value)), by = site][]
dt[,delta := c(1, diff(value)), by = site name][]
dt[,delta := c(1, diff(value)), by = `site name`][]
dt[,delta := c(1, diff(value)), by = `Site Name`][]
dt[,delta := c(1, diff(value)), by = '`Site Name`'][]
View(sond2)
View(sond)
View(sond2)
View(all_data)
View(all_data)
View(all_data)
all_data %>%
select(month, `Time (HH:mm:ss)`, variable, `Site Name`)
all_data %>%
select(month, `Time (HH:mm:ss)`, variable, `Site Name`, value)
dfdelta <- all_data %>%
select(month, `Time (HH:mm:ss)`, variable, `Site Name`, value)
View(dfdelta)
dfdelta <- all_data %>%
select(month, `Time (HH:mm:ss)`, variable, `Site Name`, value, year)
dfdelta <- all_data %>%
select(month, `Time (HH:mm:ss)`, variable, `Site Name`, value, year, Date)
View(sond2)
dfdelta %>%
mutate(condbasin =
dfdelta[dfdelta$`Time (HH:mm:ss)` == `Time (HH:mm:ss)`
&dfdelta$variable == 'Cond µS/cm'
&dfdelta$`Site Name` == 'Wetland Basin 3'
&dfdelta$Date == Date])
dfdelta %>%
mutate(condbasin =
dfdelta[dfdelta$`Time (HH:mm:ss)` == `Time (HH:mm:ss)`
&dfdelta$variable == 'Cond µS/cm'
&dfdelta$`Site Name` == 'Wetland Basin 3'
&dfdelta$Date == Date]$value[1])
dfdelta <- dfdelta %>%
mutate(condbasin =
dfdelta[dfdelta$`Time (HH:mm:ss)` == `Time (HH:mm:ss)`
&dfdelta$variable == 'Cond µS/cm'
&dfdelta$`Site Name` == 'Wetland Basin 3'
&dfdelta$Date == Date]$value[1])
View(sudhour2)
View(rain_avg)
library(tidyverse)
library(gsheet)
library(lubridate)
library(data.table)
library(readxl)
library(ggpubr)
library(broom)
library(AICcmodavg)
library(dplyr)
url<-"https://docs.google.com/spreadsheets/d/14nn7NWMBatbzcz9nqcTFzQghmzMUE2o0/edit?usp=sharing&ouid=104854259661631892531&rtpof=true&sd=true"
sud <-gsheet2tbl(url)
url4 <-"https://docs.google.com/spreadsheets/d/1A_ljZAZmiRBsW5iL40EGRlVG1LkMa_w_7rqCnwAFWKA/edit#gid=537305485"
rainfalldf<-gsheet2tbl(url4)
# rename
sud<-sud%>%
rename(Date = `Date Values Reflect`)
# filter missing data
sud<-sud %>%
filter(Date != "MISSING DATA" | Date != "NO POWER - AERATOR INSTALL")
# change date
library(lubridate)
sud2 <- sud
sud2$Date <- mdy(sud$Date)
# month column
sud<-sud2%>%
mutate(month = month(Date))%>%
mutate(month = month.name[month])%>%
mutate(year = year(Date))
# select the needed columns in Sud data
sud3 <- sud2 %>%
select(Date, `Timestamp*`, `Air temp Avg (C)`, `Air Temp Max (C)`,`Air Temp Min`, `Solar Total (MJ/m²)`)
# rename variables
sud3<-sud3 %>% rename(Dates=Date) %>% rename(Time=`Timestamp*`) %>%
rename(air_temp_avg_C = `Air temp Avg (C)`) %>% rename(air_temp_max_C = `Air Temp Max (C)`) %>%
rename(air_temp_min_C = `Air Temp Min`)
# year and month columnns
sud3 <- sud3 %>%
mutate(year = year(Dates))
sud3 <- sud3 %>%
mutate(months = month(Dates))
# avg air temp           ###### NO
avgC <- sud3 %>%
filter(year == 2021) %>%
filter(air_temp_avg_C >= 0) %>%
group_by(months) %>%
summarise(avgC = mean(air_temp_avg_C)) %>%
mutate(months = recode_factor(.x = months,
"1" = 'January',
"2" = 'February',
"3" = 'March',
"4" = 'April',
"5" = 'May',
"6" = 'June',
"7" = 'July',
"8" = 'August',
"9" = 'September',
"10" = 'October',
"11" = 'November',
"12" = 'December'))
# average air temperature graph ######### NO
ggplot(data = avgC, aes(x = months, y = avgC))+
geom_point(color = 'blue')+
geom_line(group=1, color = 'blue')+
theme(axis.text.x  = element_text(angle = 90))+
labs(title = 'Average Air Temperature 2021',
subtitle= 'Air Temperature in Celsius by Month',
y = 'Average Air Temperature (C)',
x = 'Months')
# average Solar Total per month  ######## YES
avgSolar <- sud3 %>%
filter(year == 2021) %>%
filter(`Solar Total (MJ/m²)` >= 0) %>%
group_by(months) %>%
summarise(avgSolar = mean(`Solar Total (MJ/m²)`)) %>%
mutate(months = recode_factor(.x = months,
"1" = 'January',
"2" = 'February',
"3" = 'March',
"4" = 'April',
"5" = 'May',
"6" = 'June',
"7" = 'July',
"8" = 'August',
"9" = 'September',
"10" = 'October',
"11" = 'November',
"12" = 'December'))
# average solar total ##### YES
ggplot()+
geom_col(data = avgSolar, aes(x = months, y = avgSolar), fill = 'gold')+
theme(axis.text.x  = element_text(angle = 90))+
labs(title = 'Average Solar Total 2021',
subtitle= 'In (MJ/m2) per Month',
y = 'Average Solar Total (MJ/m2)',
x = 'Months')
# OESS Precipitation and Temp data  ####3 YES ALL OF THIS?
rainfalldf1 <- rainfalldf
# month collumn
rainfalldf1 <- rainfalldf %>%
filter(!is.na(Date)) %>%
unite( col=Date, Year:Date, sep="-")
#reformat datasets because date was not matche up with the year
rainfalldf1 <-rainfalldf1 %>%
mutate(dates = c(rainfalldf1$Date[1:369] %>% ydm(), rainfalldf1$Date[370:376] %>% ymd())) %>%
mutate( Month = month.abb[month( as_date(dates)) ] )
# select the columns needed
rainfalldf1 <- rainfalldf1 %>%
select(dates, Date, Month, `High temp (F)`, `Low temp (F)`, `rainfall (inches)`)
# avg max temp per month          # YES
tempmax <- rainfalldf1 %>%
mutate(Month = factor(Month,
levels = c('Jan', 'Feb',
'Mar',
'Apr',
'May', 'Jun',
'Jul', 'Aug', 'Sep',
'Oct', 'Nov', 'Dec'))) %>%
group_by(Month) %>%
filter(year(dates) == 2021) %>%
summarise(tempmax = mean(`High temp (F)`))
# avg min temperature per month  # YES
tempmin <- rainfalldf1 %>%
mutate(Month = factor(Month,
levels = c('Jan', 'Feb',
'Mar',
'Apr',
'May', 'Jun',
'Jul', 'Aug', 'Sep',
'Oct', 'Nov', 'Dec'))) %>%
group_by(Month) %>%
filter(year(dates) == 2021) %>%
summarise(tempmin = mean(`Low temp (F)`))
# average temperature plot  # YES
ggplot()+
geom_col(data = tempmax, aes(x = Month, y = tempmax), fill= 'blue')+
geom_col(data = tempmin, aes(x = Month, y = tempmin), fill = 'red')+
theme(axis.text.x = element_text(angle = 90))+
labs(title = 'Highest and Lowest Temperatures (2021)',
subtitle = 'Average Temperature (C) per Month ',
y = 'Average Temperature',
x = 'Months')
# total rainfall per month     # YES
totalrain <- rainfalldf1 %>%
mutate(Month = factor(Month,
levels = c('Jan', 'Feb',
'Mar',
'Apr',
'May', 'Jun',
'Jul', 'Aug', 'Sep',
'Oct', 'Nov', 'Dec'))) %>%
group_by(Month) %>%
filter(year(dates)==2021) %>%
summarise(totalrain = sum(na.rm = TRUE,(`rainfall (inches)`)))
rainfalldf1 <- rainfalldf1 %>% rename(rainfall = `rainfall (inches)`)
# total rainfall plot      # YES
ggplot()+
geom_col(data = totalrain, aes( x= Month, y = totalrain),fill  = 'skyblue1')+
labs(title = 'TotalRainfall (2021)',
subtitle = 'Total Rainfall (in) per Month ',
y = 'Total Rainfall (in)',
x = 'Months')
# avg rainfall per month       YES
avgrain <- rainfalldf1 %>%
mutate(Month = factor(Month,
levels = c('Jan', 'Feb',
'Mar',
'Apr',
'May', 'Jun',
'Jul', 'Aug', 'Sep',
'Oct', 'Nov', 'Dec'))) %>%
group_by(Month) %>%
filter(year(dates)==2021) %>%
summarise(avgrain = mean(na.rm = TRUE,(`rainfall (inches)`)))
# average rainfall per month plot
ggplot()+
geom_col(data =mean_sdrain, aes(x = Month, y = mean),
fill = 'blue', group = 1)+
geom_errorbar(data = mean_sdrain, aes(x = Month, ymax = mean+sd, width = .1, ymin = mean))+
labs(title = 'Average Rainfall (2021)',
subtitle = 'Average Rainfall (in) per Month ',
y = 'Average Rainfall (in)',
x = 'Months')
# mean/sd/upper/lower for average rainfall
mean_sdrain <- rainfalldf1 %>%
mutate(Month = factor(Month,
levels = c('Jan', 'Feb',
'Mar',
'Apr',
'May', 'Jun',
'Jul', 'Aug', 'Sep',
'Oct', 'Nov', 'Dec'))) %>%
group_by(Month) %>%
summarise(mean = mean(rainfall, na.rm = TRUE), sd = sd(rainfall, na.rm = TRUE)) %>%
mutate(lower = mean-sd, upper = mean+sd)
# mean/sd plot for rainfall
ggplot()+
geom_col(data =mean_sdrain, aes(x = Month, y = mean),
fill = 'blue', group = 1)+
geom_errorbar(data = mean_sdrain, aes(x = Month, ymax = mean+sd, width = .1, ymin = mean))+
labs(title = 'Average Rainfall (2021)',
subtitle = 'Average Rainfall (in) per Month ',
y = 'Average Rainfall (in)',
x = 'Months')
meansd_tempmax <- rainfalldf1 %>%
mutate(Month = factor(Month,
levels = c('Jan', 'Feb',
'Mar',
'Apr',
'May', 'Jun',
'Jul', 'Aug', 'Sep',
'Oct', 'Nov', 'Dec'))) %>%
group_by(Month) %>%
summarise(mean = mean(`High temp (F)`, na.rm = TRUE), sd = sd(`High temp (F)`, na.rm = TRUE)) %>%
mutate(lower = mean-sd, upper = mean+sd)
# plot of temp max
ggplot()+
geom_col(data =meansd_tempmax, aes(x = Month, y = mean),
fill = 'blue', group = 1)+
geom_errorbar(data = meansd_tempmax, aes(x = Month, ymax = mean+sd, width = .1, ymin = mean))+
labs(title = 'Temperature Max (2021)',
subtitle = 'Temp Max (C) per Month ',
y = 'Average Temperature (C)',
x = 'Months')
meansd_tempmin <- rainfalldf1 %>%
mutate(Month = factor(Month,
levels = c('Jan', 'Feb',
'Mar',
'Apr',
'May', 'Jun',
'Jul', 'Aug', 'Sep',
'Oct', 'Nov', 'Dec'))) %>%
group_by(Month) %>%
summarise(mean = mean(`Low temp (F)`, na.rm = TRUE), sd = sd(`Low temp (F)`, na.rm = TRUE)) %>%
mutate(lower = mean-sd, upper = mean+sd)
# plot of temp min
ggplot()+
geom_col(data =meansd_tempmin, aes(x = Month, y = mean),
fill = 'aquamarine3', group = 1)+
geom_errorbar(data = meansd_tempmin, aes(x = Month, ymax = mean+sd, width = .1, ymin = mean))+
labs(title = 'Temperature Min (2021)',
subtitle = 'Temp Min (C) per Month ',
y = 'Average Min Temperature (C)',
x = 'Months')
# rainfall anova test
rain_df <- aov(rainfall ~ Month, data = rainfalldf1)
summary(rain_df)
# temp max anova test
tmax_df <- aov(`High temp (F)`~ Month, data = rainfalldf1)
summary(tmax_df)
# temp min anova test
tmin_df <- aov(`Low temp (F)`~ Month, data = rainfalldf1)
summary(tmin_df)
View(rain_avg)
View(rain_df)
View(rain_avg)
View(rain_df)
View(totalrain)
View(rain_avg)
View(mean_sdrain)
View(meansd_tempmax)
View(mean_sdrain)
mean_sdrain %>%
select(mean, Month)
oessrain <- mean_sdrain %>%
select(mean, Month)
View(rain_avg)
ggplot()+
geom_col(data = oessrain, aes(x = Month, y = mean), fill = 'red')+
geom_col(data = rain_avg, x = (mm, y = avgrain), fill = 'blue')
ggplot()+
geom_col(data = oessrain, aes(x = Month, y = mean), fill = 'red')+
geom_col(data = rain_avg, aes( x = mm, y = avgrain), fill = 'blue')
View(rain_avg)
ggplot()+
geom_col(data = oessrain, aes(x = Month, y = mean), fill = 'red')+
geom_col(data = rain_avg, aes( x = mm, y = rain_avg), fill = 'blue')
ggplot()+
geom_col(data = oessrain, aes(x = Month, y = mean), fill = 'red')+
geom_col(data = rain_avg, aes( x = mm, y = rain_avg), fill = 'blue')+
labs(title = 'Average Rainfall per Month (2021)',
subtitle = 'Sewanee Utility District vs. OESS',
y = 'Average Rain (mm)',
x = 'Month')
ggplot()+
geom_col(data = oessrain, aes(x = Month, y = mean), fill = 'red')+
geom_col(data = rain_avg, aes( x = mm, y = rain_avg), fill = 'blue')+
labs(title = 'Average Rainfall per Month (2021)',
subtitle = 'Sewanee Utility District vs. OESS',
y = 'Average Rain (mm)',
x = 'Month')+
theme(axis.text.x =(angle = 45))
ggplot()+
geom_col(data = oessrain, aes(x = Month, y = mean), fill = 'red')+
geom_col(data = rain_avg, aes( x = mm, y = rain_avg), fill = 'blue')+
labs(title = 'Average Rainfall per Month (2021)',
subtitle = 'Sewanee Utility District vs. OESS',
y = 'Average Rain (mm)',
x = 'Month')+
theme(axis.text.x = element_text(angle = 45))
ggplot()+
geom_col(data = oessrain, aes(x = Month, y = mean), fill = 'red')+
geom_col(data = rain_avg, aes( x = mm, y = rain_avg), fill = 'blue')+
labs(title = 'Average Rainfall per Month (2021)',
subtitle = 'Sewanee Utility District vs. OESS',
y = 'Average Rain (mm)',
x = 'Month')+
theme(axis.text.x = element_text(angle = 90))
ggplot()+
geom_col(data = oessrain, aes(x = Month, y = mean), fill = 'red')+
geom_col(data = rain_avg, aes( x = mm, y = rain_avg), fill = 'blue')+
labs(title = 'Average Rainfall per Month (2021)',
subtitle = 'Sewanee Utility District vs. OESS',
y = 'Average Rain (mm)',
x = 'Month')+
theme(axis.text.x = element_text(angle = 90))+
legend(1, 95, legend=c("OESS", "SUD"),
col=c("red", "blue"), lty=1:2, cex=0.8)
ggplot()+
geom_col(data = oessrain, aes(x = Month, y = mean), fill = 'red')+
geom_col(data = rain_avg, aes( x = mm, y = rain_avg), fill = 'blue')+
labs(title = 'Average Rainfall per Month (2021)',
subtitle = 'Sewanee Utility District vs. OESS',
y = 'Average Rain (mm)',
x = 'Month')+
theme(axis.text.x = element_text(angle = 90))+
legend(legend=c("OESS", "SUD"),
col=c("red", "blue"), lty=1:2, cex=0.8)
ggplot()+
geom_col(data = oessrain, aes(x = Month, y = mean), fill = 'red')+
geom_col(data = rain_avg, aes( x = mm, y = rain_avg), fill = 'blue')+
labs(title = 'Average Rainfall per Month (2021)',
subtitle = 'Sewanee Utility District vs. OESS',
y = 'Average Rain (mm)',
x = 'Month')+
theme(axis.text.x = element_text(angle = 90))+
legend("topright",
legend=c("OESS", "SUD"),
col=c("red", "blue"))
ggplot()+
geom_col(data = oessrain, aes(x = Month, y = mean), fill = 'red')+
geom_col(data = rain_avg, aes( x = mm, y = rain_avg), fill = 'blue')+
labs(title = 'Average Rainfall per Month (2021)',
subtitle = 'Sewanee Utility District vs. OESS',
y = 'Average Rain (mm)',
x = 'Month')+
theme(axis.text.x = element_text(angle = 90))+
legend("topright",
legend=c("OESS", "SUD"),
fill = 2, 4,
col=c("red", "blue"))
ggplot()+
geom_col(data = oessrain, aes(x = Month, y = mean), fill = 'red')+
geom_col(data = rain_avg, aes( x = mm, y = rain_avg), fill = 'blue')+
labs(title = 'Average Rainfall per Month (2021)',
subtitle = 'Sewanee Utility District vs. OESS',
y = 'Average Rain (mm)',
x = 'Month')+
theme(axis.text.x = element_text(angle = 90))+
theme(legend.position = 'bottom')
ggplot()+
geom_col(data = oessrain, aes(x = Month, y = mean), fill = 'red')+
geom_col(data = rain_avg, aes( x = mm, y = rain_avg), fill = 'blue')+
labs(title = 'Average Rainfall per Month (2021)',
subtitle = 'Sewanee Utility District vs. OESS',
y = 'Average Rain (mm)',
x = 'Month')+
theme(axis.text.x = element_text(angle = 90))+
theme(legend.position = 'bottom')+
guides(color = guide_legend(nrow =1, override.aes = list(size = 4)))
all_data %>%
filter(`Site Name` == 'Lagoon C') %>%
filter(variable == 'Cond µS/cm') %>%
ymin(0) %>% ymax(7306) %>%
tally()
all_data %>%
filter(`Site Name` == 'Lagoon C') %>%
filter(variable == 'Cond µS/cm') %>%
ymin(0) %>% ymax(7306)
all_data %>%
filter(`Site Name` == 'Lagoon C') %>%
filter(variable == 'Cond µS/cm') %>%
filter((n) = 7306)
all_data %>%
filter(`Site Name` == 'Lagoon C') %>%
filter(variable == 'Cond µS/cm') %>%
filter((n) =+ 7306)
all_data %>%
filter(`Site Name` == 'Lagoon C') %>%
filter(variable == 'Cond µS/cm') %>%
filter((n) =+7306)
all_data %>%
filter(`Site Name` == 'Lagoon C') %>%
filter(variable == 'Cond µS/cm') %>%
filter((n) == 7306)
View(all_data)
all_data %>%
filter(`Site Name` == 'Lagoon C') %>%
filter(variable == 'Cond µS/cm') %>%
filter(Date == '2021-05')
all_data %>%
filter(`Site Name` == 'Lagoon C') %>%
filter(variable == 'Cond µS/cm') %>%
filter(Date == 2021-05-12)
all_data %>%
filter(`Site Name` == 'Lagoon C') %>%
filter(variable == 'Cond µS/cm') %>%
filter(Date <= 2021-05-12)
all_data %>%
filter(`Site Name` == 'Lagoon C') %>%
filter(variable == 'Cond µS/cm') %>%
filter(Date <= 2021-12-05)
all_data %>%
filter(`Site Name` == 'Lagoon C') %>%
filter(variable == 'Cond µS/cm') %>%
tally()
View(all_data)
View(dfdelta)
all_data %>%
select(month, `Time (HH:mm:ss)`, variable, `Site Name`, value, year, Date) %>%
group_by( Time )
all_data %>%
select(month, `Time (HH:mm:ss)`, variable, `Site Name`, value, year, Date) %>%
group_by( `Time (HH:mm:ss)` )
# average rainfall per month plot
ggplot()+
geom_col(data =mean_sdrain, aes(x = Month, y = mean),
fill = 'blue', group = 1)+
geom_errorbar(data = mean_sdrain, aes(x = Month, ymax = mean+sd, width = .1, ymin = mean))+
labs(title = 'Average Rainfall (2021)',
subtitle = 'Average Rainfall (in) per Month ',
y = 'Average Rainfall (in)',
x = 'Months')
View(avgSolar)
ggplot(data = rain_avg, aes(x = mm, y = rain_avg))+
scale_x_continuous(
breaks = seq_along(month.name),
labels = month.name)+
theme(axis.text.x = element_text(angle = 90))+
ylim(0,.15)+
geom_col(fill = 'darkolivegreen3')+
labs(title = "Rainfall per Month (2021)",
subtitle = 'Average Rainfall at Sewanee Utility District',
y = 'Average Rainfall (mm)',
x = 'Months')
