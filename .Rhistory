12+3
12*3
8-1000000
2/3
1/2/3
1/(2/3)
1/(2/3
)
log(23)
sqrt(1048)
exp(1)
pi
pi*(4^2)
mean(c(13,64,7,8))
596+198
596+198
596+298
596+298
62+60+29+27+26
ave(204)
ave(62+60+29+27+26)
mean(c(62+60+29+27+26))
mean(c(62,60,29,27,26))
sqrt(pi)
round(1.772454,digits = 2)
5*6+4
sqrt(16)
round(100/3,digits = 3)
jacob<-20
rm(jacob)
jacob<-20
elijah<-13
mom<-42
dad<-72
(jacob+elijah+mom+dad)/4
cat<-"Yuumi"
cat2<-'Yuumi'
cat==cat2
dog<-"King"
dog==cat
dog=cat2
dog==cat
dog
dog
dog<-"King"
does_dog_equal_cat<-(dog==cat)
does_dog_equal_cat
(does_dog_equal_cat<-(dog==cat))
ls()
class(dog)
dog
3+3
x<-3+3
x
# in the next line i will add 3+3
x<-3+3 # i just added 3+3
totalbanana<-2*52*20
totalicecream<-1*31*20
ratio<-(totalbanana/totalicecream)
#First: install your package
install.packages("dplyr")
#Library
library(dplyr)
c(1,4,6,8)%>%mean
#First: install your package
#install.packages("dplyr") #you only install once
install.packages("ggplot2")
install.packages("readr")
install.packages("gsheet")
install.packages("leaflet")
library(ggplot2)
library(readr)
library(gsheet)
library(leaflet)
# The pipe: %>% (think of the word:THEN)
1:10
1:100
100:70 %>% mean
rnorm(100)
rnorm(100) %>% hist
hist(rnorm(100))
x<-rnorm(100)
x %>% hist
#Exact same result, different approach
sqrt(mean(1:100006))
1:100006 %>% mean %>% sqrt
library(leaflet)
url <- 'https://docs.google.com/spreadsheets/d/1xoecVY2roNzS2gpt8UnvhGhCxrocXjJMpji9eUgiDMw/edit?usp=sharing'
url
library(gsheet)
gsheet2tbl(url)
#This time actually save it as an object
df<-gsheet2tbl(url)
df
#Let's make a map
leaflet()
leaflet() %>% addTiles()
leaflet() %>% addTiles() %>% addMarkers(data=df)
leaflet() %>% addMarkers() %>% addTiles(data=df)
leaflet() %>% addProviderTiles(providers$Esri.WorldImagery)
addMarkers(data=df)
addMarkers(data=df)
leaflet()%>%addMarkers(data=df)
leaflet()%>%addProviderTiles(providers$Esri.WorldImagery) #%>%
leaflet()%>%addMarkers(data=df)
addMarkers(data=df)
leaflet()%>%addProviderTiles(providers$Esri.WorldImagery) %>%
addMarkers(data=df)
leaflet() %>%
leaflet()%>%addProviderTiles(providers$Esri.WorldImagery) %>%
addCircleMarkers(data=df)
leaflet() %>%
leaflet()%>%addProviderTiles(providers$Esri.WorldImagery) %>%
addCircleMarkers(data=df,color = 'red')
leaflet() %>%
leaflet()%>%addProviderTiles(providers$Esri.WorldImagery) %>%
addCircleMarkers(data=df,color = 'red',radius = 100)
leaflet() %>%
leaflet()%>%addProviderTiles(providers$Esri.WorldImagery) %>%
addCircleMarkers(data=df,color = 'red',radius = 10)
df
#This time actually save it as an object
df<-gsheet2tbl(url)
leaflet() %>%
leaflet()%>%addProviderTiles(providers$Esri.WorldImagery) %>%
addCircleMarkers(data=df,color = 'red',radius = 10)
sample(team,size=1)
team
library(leaflet)
library(gsheet)
library(dplyr)
library(reader)
#Make a map of the world
leaflet() %>% addTiles() %>%
#Make a map of the world
leaflet() %>%
leaflet() %>% addTiles() %>%
#Make a map of the world
leaflet() %>%
leaflet() %>% addTiles() %>%
#Make a map of the world
leaflet() %>%
leaflet() %>% addTiles()
#Loading a new Dataset
whales <- read_csv('https://raw.githubusercontent.com/ericmkeen/capstone/master/fin_whales.csv')
library(reader)
whales <- read_csv('https://raw.githubusercontent.com/ericmkeen/capstone/master/fin_whales.csv')
library(dplyr)
library(reader)
library(readr)
whales <- read_csv('https://raw.githubusercontent.com/ericmkeen/capstone/master/fin_whales.csv')
whales %>% View
#Make a map of this 'whales' dataset
leaflet() %>% addTiles() %>% addMarkers(data = whales)
#Make a map of this 'whales' dataset
leaflet() %>% addTiles() %>% addCircleMarkers(data = whales)
#Make a map of this 'whales' dataset
leaflet() %>% addTiles() %>% addCircleMarkers(data = whales,radius = 1)
#Make a map of this 'whales' dataset
leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addCircleMarkers(data = whales,
radius = 1)
#Try to scale point radius by group size
leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addCircleMarkers(data = whales,
radius = whales$size)
#Add a mouse over feature
leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addCircleMarkers(data = whales,
radius = whales$size,
label = whales$date)
#Add a cluster option to these sightings
leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addCircleMarkers(data = whales,
radius = whales$size,
label = whales$date,
clusterOptions = markerClusterOptions())
#Save this map in an object
m<-leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas) %>%
addCircleMarkers(data = whales,
radius = whales$size,
label = whales$date,
clusterOptions = markerClusterOptions())
m
#Take some measurements on this map
install.packages('leaflet.extras')
library(leaflet.extras)
m %>% addDrawToolbar
#A character vector
teachers<-c('eric,joe,matthew')
teachers
#A numeric vector
teachers_heights<-c(202,180,178)
#When you combine a character and a numeric, numbers becomes strings
c(teachers,teachers_heights)
#You can't add numbers and characters together
teachers+teachers_heights
#Second way to make a vector:colon
1:10
10:1
#Third way to make a vector
seq(1,100,length=25)
seq(1,100,by=10)
seq(0, 100, by=10)
#Another way to make vectors
rep(1,times=100)
rep('oh heyyy',times=10)
rep(1:2, each=5)
reap(teachers,times=3)
rep(teachers,times=3)
#rnorm
rnorm(10)
#runif (from a uniform-random distribution)
runif(10)
x<-0:100
y<-5:105
#You can add vectors together
x+y
x-y
x/y
x*y
runif(1)
runif(1)
runif(1)
runif(1) <=0.5
sample(1:10,size=1)
x<-0:100
sample(1:10,size=1)
sample(1:10,size=1)
runif(1,min=0,max=10) %>% round
runif(50,min=35.19,35.21)
latitude<-runif(50,min=35.19,35.21)
longitude<-runif(50,min=-85.93,-85.91)
runif(50,min=-85.93,-85.91)
longitude<-runif(50,min=-85.93,-85.91)
#Put these values inside a dataframe
df<-data.frame(latitude,longitude)
leaflet() %>% addTiles() %>% addCircleMarkers(data = df)
#Let's work with vectors of different lengths
#for now, one vector will be length 1
(x<-runif(100,min=0,max=1000))
x+5
x-5
x/5
x*5
#How long is x?
x %>% length
#Min value in vector?
x %>% min
x %>% max
#Sort your value by vector
x %>% sort
#I just want to look at first few values
x %>% head
#Look at final few values
x %>% tail
#Sort by descending value
x %>% sort %>% rev
#Practice
library(dplyr)
library(gsheet)
library(readr)
people<-read_csv('http://datatrain.global/data/survey.csv')
people<-read_csv('http://datatrain.global/data/survey.csv')
people<-read_csv('http://datatrain.global/data/survey.csv')
people<-read_csv ('http://datatrain.global/data/survey.csv')
people <-read_csv ('http://datatrain.global/data/survey.csv')
#Practice
library(dplyr)
library(gsheet)
library(readr)
people <-read_csv ('http://datatrain.global/data/survey.csv')
packageVersion('readr')
packageVersion('dplyr')
people <-read_csv ('http://datatrain.global/data/survey.csv')
shiny::runApp('Desktop/Wetlands_Project/wetlands')
runApp('Desktop/Wetlands_Project/wetlands')
runApp('Desktop/Wetlands_Project/wetlands')
runApp('Desktop/Wetlands_Project/wetlands')
runApp('Desktop/Wetlands_Project/wetlands')
runApp('Desktop/Wetlands_Project/wetlands')
runApp('Desktop/Wetlands_Project/wetlands')
runApp('Desktop/Wetlands_Project/wetlands')
runApp('Desktop/Wetlands_Project/wetlands')
runApp('Desktop/Wetlands_Project/wetlands')
runApp('Desktop/Wetlands_Project/wetlands')
runApp('Desktop/Wetlands_Project/wetlands')
runApp('Desktop/Wetlands_Project/wetlands')
runApp('Desktop/Wetlands_Project/wetlands')
runApp('Desktop/Wetlands_Project/wetlands')
runApp('Desktop/Wetlands_Project/wetlands')
runApp('Desktop/Wetlands_Project/wetlands')
runApp('Desktop/Wetlands_Project/wetlands')
runApp('Desktop/Wetlands_Project/wetlands')
runApp('Wetlands Data/wetlands/oldapp.R')
runApp('Desktop/Wetlands_Project/wetlands')
runApp('Desktop/Wetlands_Project/wetlands')
runApp('Datalab Work/stirlings')
runApp('Desktop/Wetlands_Project/wetlands')
